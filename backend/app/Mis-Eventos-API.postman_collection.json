{
    "openapi": "3.1.0",
    "info": {
      "title": "Projecto Mis Eventos",
      "description": "\nMis Eventos permite administrar el ciclo de vida de un evento, desde su creaciÃ³n y configuraciÃ³n hasta la gestiÃ³n de asistentes. ðŸš€\n\n## Items\n\nYou can **read items**.\n\n## Users\n\nYou will be able to:\n\n* **Create users** (_not implemented_).\n* **Read users** (_not implemented_).\n",
      "version": "0.1.0"
    },
    "paths": {
      "/api/v1/login/access-token": {
        "post": {
          "tags": [
            "login"
          ],
          "summary": "Login Access Token",
          "description": "OAuth2 compatible token login, get an access token for future requests",
          "operationId": "login-login_access_token",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/Body_login-login_access_token"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Token"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/login/test-token": {
        "post": {
          "tags": [
            "login"
          ],
          "summary": "Test Token",
          "description": "Test access token",
          "operationId": "login-test_token",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        }
      },
      "/api/v1/password-recovery/{email}": {
        "post": {
          "tags": [
            "login"
          ],
          "summary": "Recover Password",
          "description": "Password Recovery",
          "operationId": "login-recover_password",
          "parameters": [
            {
              "name": "email",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Email"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/reset-password/": {
        "post": {
          "tags": [
            "login"
          ],
          "summary": "Reset Password",
          "description": "Reset password",
          "operationId": "login-reset_password",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPassword"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/password-recovery-html-content/{email}": {
        "post": {
          "tags": [
            "login"
          ],
          "summary": "Recover Password Html Content",
          "description": "HTML Content for Password Recovery",
          "operationId": "login-recover_password_html_content",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "email",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Email"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/html": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/roles/": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Read Roles",
          "description": "Retrieve roles.",
          "operationId": "users-read_roles",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 10,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RolesPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Create Role",
          "description": "Create new role.",
          "operationId": "users-create_role",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RolePublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/roles/{id}": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Read Role",
          "description": "Get role by ID.",
          "operationId": "users-read_role",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RolePublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users/": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Read Users",
          "description": "Retrieve users.",
          "operationId": "users-read_users",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UsersPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Create User",
          "description": "Create new user.",
          "operationId": "users-create_user",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users/me": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Read User Me",
          "description": "Get current user.",
          "operationId": "users-read_user_me",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "Delete User Me",
          "description": "Delete own user.",
          "operationId": "users-delete_user_me",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        },
        "patch": {
          "tags": [
            "users"
          ],
          "summary": "Update User Me",
          "description": "Update own user.",
          "operationId": "users-update_user_me",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateMe"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        }
      },
      "/api/v1/users/me/password": {
        "patch": {
          "tags": [
            "users"
          ],
          "summary": "Update Password Me",
          "description": "Update own password.",
          "operationId": "users-update_password_me",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePassword"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ]
        }
      },
      "/api/v1/users/signup": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Register User",
          "description": "Create new user without the need to be logged in.",
          "operationId": "users-register_user",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegister"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users/{user_id}": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Read User By Id",
          "description": "Get a specific user by id.",
          "operationId": "users-read_user_by_id",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "User Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "users"
          ],
          "summary": "Update User",
          "description": "Update a user.",
          "operationId": "users-update_user",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "User Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "Delete User",
          "description": "Delete a user.",
          "operationId": "users-delete_user",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "User Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/event_status/": {
        "get": {
          "tags": [
            "events"
          ],
          "summary": "Read Statuses",
          "description": "Retrieve statuses.",
          "operationId": "events-read_statuses",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 10,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StatusesPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "events"
          ],
          "summary": "Create Status",
          "description": "Create new status.",
          "operationId": "events-create_status",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StatusPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/event_status/{id}": {
        "get": {
          "tags": [
            "events"
          ],
          "summary": "Read Status",
          "description": "Get status by ID.",
          "operationId": "events-read_status",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StatusPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/events/": {
        "get": {
          "tags": [
            "events"
          ],
          "summary": "Read Events",
          "description": "Retrieve events.",
          "operationId": "events-read_events",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventsPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "events"
          ],
          "summary": "Create Event",
          "description": "Create new event.",
          "operationId": "events-create_event",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/events/{event_id}": {
        "get": {
          "tags": [
            "events"
          ],
          "summary": "Read Event",
          "description": "Get event by ID.",
          "operationId": "events-read_event",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "event_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Event Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "events"
          ],
          "summary": "Update Event",
          "operationId": "events-update_event",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "event_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Event Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "events"
          ],
          "summary": "Delete Event",
          "description": "Delete an event.",
          "operationId": "events-delete_event",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "event_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Event Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/events/attend/{event_id}": {
        "post": {
          "tags": [
            "events"
          ],
          "summary": "Add User To Event",
          "operationId": "events-add_user_to_event",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "event_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Event Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/sessions/": {
        "get": {
          "tags": [
            "sessions"
          ],
          "summary": "Read Sessionss",
          "description": "Retrieve sessions.",
          "operationId": "sessions-read_sessionss",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "Skip"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionssPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "sessions"
          ],
          "summary": "Create Sessions",
          "description": "Create new sessions.",
          "operationId": "sessions-create_sessions",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionsPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/sessions/{sessions_id}": {
        "get": {
          "tags": [
            "sessions"
          ],
          "summary": "Read Sessions",
          "description": "Get sessions by ID.",
          "operationId": "sessions-read_sessions",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "sessions_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Sessions Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionsPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "sessions"
          ],
          "summary": "Delete Sessions",
          "description": "Delete a session.",
          "operationId": "sessions-delete_sessions",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "sessions_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Sessions Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/sessions/{event_id}": {
        "patch": {
          "tags": [
            "sessions"
          ],
          "summary": "Update Sessions",
          "operationId": "sessions-update_sessions",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "sessions_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Sessions Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionsPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/sessions/attend/{sessions_id}": {
        "post": {
          "tags": [
            "sessions"
          ],
          "summary": "Add User To Event",
          "operationId": "sessions-add_user_to_event",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "sessions_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Sessions Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/utils/test-email/": {
        "post": {
          "tags": [
            "utils"
          ],
          "summary": "Test Email",
          "description": "Test emails.",
          "operationId": "utils-test_email",
          "security": [
            {
              "OAuth2PasswordBearer": []
            }
          ],
          "parameters": [
            {
              "name": "email_to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "email",
                "title": "Email To"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/utils/health-check/": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Health Check",
          "operationId": "utils-health_check",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "boolean",
                    "title": "Response Utils-Health Check"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/private/users/": {
        "post": {
          "tags": [
            "private"
          ],
          "summary": "Create User",
          "description": "Create a new user.",
          "operationId": "private-create_user",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateUserCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Body_login-login_access_token": {
          "properties": {
            "grant_type": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "password"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Grant Type"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            },
            "scope": {
              "type": "string",
              "title": "Scope",
              "default": ""
            },
            "client_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Id"
            },
            "client_secret": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Secret"
            }
          },
          "type": "object",
          "required": [
            "username",
            "password"
          ],
          "title": "Body_login-login_access_token"
        },
        "EventCreate": {
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "title": "Title"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "start_datetime": {
              "type": "string",
              "format": "date-time",
              "title": "Start Datetime"
            },
            "end_datetime": {
              "type": "string",
              "format": "date-time",
              "title": "End Datetime"
            },
            "location": {
              "type": "string",
              "maxLength": 255,
              "title": "Location"
            },
            "capacity": {
              "type": "integer",
              "exclusiveMinimum": 5,
              "title": "Capacity"
            },
            "attendee_count": {
              "type": "integer",
              "minimum": 0,
              "title": "Attendee Count",
              "default": 0
            },
            "organizer_id": {
              "type": "string",
              "format": "uuid",
              "title": "Organizer Id"
            },
            "status_id": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          },
          "type": "object",
          "required": [
            "title",
            "start_datetime",
            "end_datetime",
            "location",
            "capacity",
            "organizer_id",
            "status_id"
          ],
          "title": "EventCreate"
        },
        "EventPublic": {
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "title": "Title"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "organizer_id": {
              "type": "string",
              "format": "uuid",
              "title": "Organizer Id"
            }
          },
          "type": "object",
          "required": [
            "title",
            "id",
            "organizer_id"
          ],
          "title": "EventPublic"
        },
        "EventUpdate": {
          "properties": {
            "title": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "start_datetime": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Datetime"
            },
            "end_datetime": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Datetime"
            },
            "location": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            },
            "capacity": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 5
                },
                {
                  "type": "null"
                }
              ],
              "title": "Capacity"
            },
            "attendee_count": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attendee Count"
            },
            "organizer_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organizer Id"
            },
            "status_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Id"
            }
          },
          "type": "object",
          "required": [
            "start_datetime",
            "end_datetime",
            "location",
            "capacity",
            "attendee_count",
            "organizer_id",
            "status_id"
          ],
          "title": "EventUpdate"
        },
        "EventsPublic": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/EventPublic"
              },
              "type": "array",
              "title": "Data"
            },
            "count": {
              "type": "integer",
              "title": "Count"
            }
          },
          "type": "object",
          "required": [
            "data",
            "count"
          ],
          "title": "EventsPublic"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "Message": {
          "properties": {
            "message": {
              "type": "string",
              "title": "Message"
            }
          },
          "type": "object",
          "required": [
            "message"
          ],
          "title": "Message"
        },
        "NewPassword": {
          "properties": {
            "token": {
              "type": "string",
              "title": "Token"
            },
            "new_password": {
              "type": "string",
              "maxLength": 40,
              "minLength": 8,
              "title": "New Password"
            }
          },
          "type": "object",
          "required": [
            "token",
            "new_password"
          ],
          "title": "NewPassword"
        },
        "PrivateUserCreate": {
          "properties": {
            "email": {
              "type": "string",
              "title": "Email"
            },
            "password": {
              "type": "string",
              "title": "Password"
            },
            "full_name": {
              "type": "string",
              "title": "Full Name"
            },
            "is_verified": {
              "type": "boolean",
              "title": "Is Verified",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "email",
            "password",
            "full_name"
          ],
          "title": "PrivateUserCreate"
        },
        "RoleCreate": {
          "properties": {
            "role": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Role"
            }
          },
          "type": "object",
          "required": [
            "role"
          ],
          "title": "RoleCreate"
        },
        "RolePublic": {
          "properties": {
            "role": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Role"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "role",
            "id"
          ],
          "title": "RolePublic"
        },
        "RolesPublic": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/RolePublic"
              },
              "type": "array",
              "title": "Data"
            },
            "count": {
              "type": "integer",
              "title": "Count"
            }
          },
          "type": "object",
          "required": [
            "data",
            "count"
          ],
          "title": "RolesPublic"
        },
        "SessionsCreate": {
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "title": "Title"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "start_datetime": {
              "type": "string",
              "format": "date-time",
              "title": "Start Datetime"
            },
            "end_datetime": {
              "type": "string",
              "format": "date-time",
              "title": "End Datetime"
            },
            "capacity": {
              "type": "integer",
              "exclusiveMinimum": 5,
              "title": "Capacity"
            },
            "attendee_count": {
              "type": "integer",
              "minimum": 0,
              "title": "Attendee Count",
              "default": 0
            },
            "event_id": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            },
            "speaker_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Speaker Id"
            }
          },
          "type": "object",
          "required": [
            "title",
            "start_datetime",
            "end_datetime",
            "capacity",
            "event_id"
          ],
          "title": "SessionsCreate"
        },
        "SessionsPublic": {
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "title": "Title"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "event_id": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            },
            "speaker_id": {
              "type": "string",
              "format": "uuid",
              "title": "Speaker Id"
            }
          },
          "type": "object",
          "required": [
            "title",
            "id",
            "event_id",
            "speaker_id"
          ],
          "title": "SessionsPublic"
        },
        "SessionsUpdate": {
          "properties": {
            "title": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "start_datetime": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Datetime"
            },
            "end_datetime": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Datetime"
            },
            "capacity": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 5
                },
                {
                  "type": "null"
                }
              ],
              "title": "Capacity"
            },
            "attendee_count": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attendee Count"
            },
            "event_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Id"
            },
            "speaker_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Speaker Id"
            }
          },
          "type": "object",
          "required": [
            "start_datetime",
            "end_datetime",
            "capacity",
            "attendee_count",
            "event_id",
            "speaker_id"
          ],
          "title": "SessionsUpdate"
        },
        "SessionssPublic": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/SessionsPublic"
              },
              "type": "array",
              "title": "Data"
            },
            "count": {
              "type": "integer",
              "title": "Count"
            }
          },
          "type": "object",
          "required": [
            "data",
            "count"
          ],
          "title": "SessionssPublic"
        },
        "StatusCreate": {
          "properties": {
            "status": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Status"
            }
          },
          "type": "object",
          "required": [
            "status"
          ],
          "title": "StatusCreate"
        },
        "StatusPublic": {
          "properties": {
            "status": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Status"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "status",
            "id"
          ],
          "title": "StatusPublic"
        },
        "StatusesPublic": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/StatusPublic"
              },
              "type": "array",
              "title": "Data"
            },
            "count": {
              "type": "integer",
              "title": "Count"
            }
          },
          "type": "object",
          "required": [
            "data",
            "count"
          ],
          "title": "StatusesPublic"
        },
        "Token": {
          "properties": {
            "access_token": {
              "type": "string",
              "title": "Access Token"
            },
            "token_type": {
              "type": "string",
              "title": "Token Type",
              "default": "bearer"
            }
          },
          "type": "object",
          "required": [
            "access_token"
          ],
          "title": "Token"
        },
        "UpdatePassword": {
          "properties": {
            "current_password": {
              "type": "string",
              "maxLength": 40,
              "minLength": 8,
              "title": "Current Password"
            },
            "new_password": {
              "type": "string",
              "maxLength": 40,
              "minLength": 8,
              "title": "New Password"
            }
          },
          "type": "object",
          "required": [
            "current_password",
            "new_password"
          ],
          "title": "UpdatePassword"
        },
        "UserCreate": {
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 255,
              "format": "email",
              "title": "Email"
            },
            "is_active": {
              "type": "boolean",
              "title": "Is Active",
              "default": true
            },
            "is_superuser": {
              "type": "boolean",
              "title": "Is Superuser",
              "default": false
            },
            "full_name": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            },
            "password": {
              "type": "string",
              "maxLength": 40,
              "minLength": 8,
              "title": "Password"
            }
          },
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "title": "UserCreate"
        },
        "UserPublic": {
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 255,
              "format": "email",
              "title": "Email"
            },
            "is_active": {
              "type": "boolean",
              "title": "Is Active",
              "default": true
            },
            "is_superuser": {
              "type": "boolean",
              "title": "Is Superuser",
              "default": false
            },
            "full_name": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "email",
            "id"
          ],
          "title": "UserPublic"
        },
        "UserRegister": {
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 255,
              "format": "email",
              "title": "Email"
            },
            "password": {
              "type": "string",
              "maxLength": 40,
              "minLength": 8,
              "title": "Password"
            },
            "full_name": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            }
          },
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "title": "UserRegister"
        },
        "UserUpdate": {
          "properties": {
            "email": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255,
                  "format": "email"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            },
            "is_active": {
              "type": "boolean",
              "title": "Is Active",
              "default": true
            },
            "is_superuser": {
              "type": "boolean",
              "title": "Is Superuser",
              "default": false
            },
            "full_name": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            },
            "password": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 40,
                  "minLength": 8
                },
                {
                  "type": "null"
                }
              ],
              "title": "Password"
            }
          },
          "type": "object",
          "title": "UserUpdate"
        },
        "UserUpdateMe": {
          "properties": {
            "full_name": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            },
            "email": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 255,
                  "format": "email"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          "type": "object",
          "title": "UserUpdateMe"
        },
        "UsersPublic": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/UserPublic"
              },
              "type": "array",
              "title": "Data"
            },
            "count": {
              "type": "integer",
              "title": "Count"
            }
          },
          "type": "object",
          "required": [
            "data",
            "count"
          ],
          "title": "UsersPublic"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        }
      },
      "securitySchemes": {
        "OAuth2PasswordBearer": {
          "type": "oauth2",
          "flows": {
            "password": {
              "scopes": {
  
              },
              "tokenUrl": "/api/v1/login/access-token"
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "login",
        "description": "Operaciones de autenticaciÃ³n de usuarios"
      },
      {
        "name": "users",
        "description": "Operaciones con usuarios."
      },
      {
        "name": "events",
        "description": "Operaciones con eventos. Adicionalmente, permite aÃ±adir usuarios (asistentes) a eventos."
      },
      {
        "name": "sessions",
        "description": "Operaciones con sesiones. Adicionalmente, permite aÃ±adir usuarios (asistentes) a sesiones."
      },
      {
        "name": "utils",
        "description": "Operaciones de utilidades para probar el backend."
      },
      {
        "name": "private",
        "description": "CreaciÃ³n de usuarios en ambiente local."
      }
    ]
  }